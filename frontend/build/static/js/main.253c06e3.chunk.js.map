{"version":3,"sources":["components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","App.js","index.js"],"names":["FormView","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","submitQuestion","event","preventDefault","fetch","concat","process","method","headers","Content-Type","body","JSON","stringify","question","state","answer","difficulty","category","then","response","ok","Error","document","getElementById","reset","catch","error","alert","handleChange","setState","_defineProperty","target","name","value","categories","_createClass","key","_this2","json","result","_this3","React","createElement","id","className","onSubmit","type","onChange","Object","keys","map","Component","Question","visibleAnswer","_this$props","alt","toLowerCase","src","onClick","questionAction","flipVisibility","style","visibility","Search","_len","arguments","length","args","Array","_key","apply","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","QuestionView","getQuestions","_asyncToGenerator","_callee","_context","page","questions","totalQuestions","total_questions","currentCategory","current_category","t0","getByCategory","$","ajax","url","success","searchTerm","dataType","contentType","data","xhrFields","withCredentials","crossDomain","action","window","confirm","num","pageNumbers","maxPage","Math","ceil","_loop","selectPage","_this4","q","ind","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","_ref$id","quizCategory","getNextQuestion","previousQuestions","_toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitGuess","evaluate","evaluateAnswer","numCorrect","restartGame","formatGuess","replace","split","every","el","includes","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","App","path","Router","Switch","Route","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.253c06e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/FormView.css';\r\n\r\nclass FormView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      question: '',\r\n      answer: '',\r\n      difficulty: 1,\r\n      category: 1,\r\n      categories: {},\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   $.ajax({\r\n  //     url: `/categories`, //TODO: update request URL\r\n  //     type: 'GET',\r\n  //     success: (result) => {\r\n  //       this.setState({ categories: result.categories });\r\n  //       return;\r\n  //     },\r\n  //     error: (error) => {\r\n  //       alert('Unable to load categories. Please try your request again');\r\n  //       return;\r\n  //     },\r\n  //   });\r\n  // }\r\n  componentDidMount() {\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/categories`)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        this.setState({ categories: result.categories });\r\n      })\r\n      .catch((error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n      });\r\n  }\r\n\r\n  // submitQuestion = (event) => {\r\n  //   event.preventDefault();\r\n  //   $.ajax({\r\n  //     url: '/questions', //TODO: update request URL\r\n  //     type: 'POST',\r\n  //     dataType: 'json',\r\n  //     contentType: 'application/json',\r\n  //     data: JSON.stringify({\r\n  //       question: this.state.question,\r\n  //       answer: this.state.answer,\r\n  //       difficulty: this.state.difficulty,\r\n  //       category: this.state.category,\r\n  //     }),\r\n  //     xhrFields: {\r\n  //       withCredentials: true,\r\n  //     },\r\n  //     crossDomain: true,\r\n  //     success: (result) => {\r\n  //       document.getElementById('add-question-form').reset();\r\n  //       return;\r\n  //     },\r\n  //     error: (error) => {\r\n  //       alert('Unable to add question. Please try your request again');\r\n  //       return;\r\n  //     },\r\n  //   });\r\n  // };\r\n  submitQuestion = (event) => {\r\n    event.preventDefault();\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/questions`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        difficulty: this.state.difficulty,\r\n        category: this.state.category,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          document.getElementById('add-question-form').reset();\r\n        } else {\r\n          throw new Error('Unable to add question');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Unable to add question. Please try your request again');\r\n      });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id='add-form'>\r\n        <h2>Add a New Trivia Question</h2>\r\n        <form\r\n          className='form-view'\r\n          id='add-question-form'\r\n          onSubmit={this.submitQuestion}\r\n        >\r\n          <label>\r\n            Question\r\n            <input type='text' name='question' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Answer\r\n            <input type='text' name='answer' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Difficulty\r\n            <select name='difficulty' onChange={this.handleChange}>\r\n              <option value='1'>1</option>\r\n              <option value='2'>2</option>\r\n              <option value='3'>3</option>\r\n              <option value='4'>4</option>\r\n              <option value='5'>5</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Category\r\n            <select name='category' onChange={this.handleChange}>\r\n              {Object.keys(this.state.categories).map((id) => {\r\n                return (\r\n                  <option key={id} value={id}>\r\n                    {this.state.categories[id]}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          <input type='submit' className='button' value='Submit' />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Question.css';\r\n\r\nclass Question extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visibleAnswer: false,\r\n    };\r\n  }\r\n\r\n  flipVisibility() {\r\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { question, answer, category, difficulty } = this.props;\r\n    return (\r\n      <div className='Question-holder'>\r\n        <div className='Question'>{question}</div>\r\n        <div className='Question-status'>\r\n          <img\r\n            className='category'\r\n            alt={`${category.toLowerCase()}`}\r\n            src={`${category.toLowerCase()}.svg`}\r\n          />\r\n          <div className='difficulty'>Difficulty: {difficulty}</div>\r\n          <img\r\n            src='delete.png'\r\n            alt='delete'\r\n            className='delete'\r\n            onClick={() => this.props.questionAction('DELETE')}\r\n          />\r\n        </div>\r\n        <div\r\n          className='show-answer button'\r\n          onClick={() => this.flipVisibility()}\r\n        >\r\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\r\n        </div>\r\n        <div className='answer-holder'>\r\n          <span\r\n            style={{\r\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\r\n            }}\r\n          >\r\n            Answer: {answer}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  getInfo = (event) => {\r\n    event.preventDefault();\r\n    this.props.submitSearch(this.state.query);\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      query: this.search.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.getInfo}>\r\n        <input\r\n          placeholder='Search questions...'\r\n          ref={(input) => (this.search = input)}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <input type='submit' value='Submit' className='button' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/App.css';\r\nimport Question from './Question';\r\nimport Search from './Search';\r\nimport $ from 'jquery';\r\n\r\nclass QuestionView extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      page: 1,\r\n      totalQuestions: 0,\r\n      categories: {},\r\n      currentCategory: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  // getQuestions = () => {\r\n  //   $.ajax({\r\n  //     url: `/questions?page=${this.state.page}`, //TODO: update request URL\r\n  //     type: 'GET',\r\n  //     success: (result) => {\r\n  //       this.setState({\r\n  //         questions: result.questions,\r\n  //         totalQuestions: result.total_questions,\r\n  //         categories: result.categories,\r\n  //         currentCategory: result.current_category,\r\n  //       });\r\n  //       return;\r\n  //     },\r\n  //     error: (error) => {\r\n  //       alert('Unable to load questions. Please try your request again');\r\n  //       return;\r\n  //     },\r\n  //   });\r\n  // };\r\n  getQuestions = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/questions?page=${this.state.page}`\r\n      );\r\n      const result = await response.json();\r\n      this.setState({\r\n        questions: result.questions,\r\n        totalQuestions: result.total_questions,\r\n        categories: result.categories,\r\n        currentCategory: result.current_category,\r\n      });\r\n    } catch (error) {\r\n      alert('Unable to load questions. Please try your request again');\r\n    }\r\n  };\r\n\r\n\r\n  selectPage(num) {\r\n    this.setState({ page: num }, () => this.getQuestions());\r\n  }\r\n\r\n  createPagination() {\r\n    let pageNumbers = [];\r\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      pageNumbers.push(\r\n        <span\r\n          key={i}\r\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n          onClick={() => {\r\n            this.selectPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  getByCategory = (id) => {\r\n    $.ajax({\r\n      url: `/categories/${id}/questions`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitSearch = (searchTerm) => {\r\n    $.ajax({\r\n      url: `/questions/search`, //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({ searchTerm: searchTerm }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  questionAction = (id) => (action) => {\r\n    if (action === 'DELETE') {\r\n      if (window.confirm('are you sure you want to delete the question?')) {\r\n        $.ajax({\r\n          url: `/questions/${id}`, //TODO: update request URL\r\n          type: 'DELETE',\r\n          success: (result) => {\r\n            this.getQuestions();\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load questions. Please try your request again');\r\n            return;\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='question-view'>\r\n        <div className='categories-list'>\r\n          <h2\r\n            onClick={() => {\r\n              this.getQuestions();\r\n            }}\r\n          >\r\n            Categories\r\n          </h2>\r\n          <ul>\r\n            {Object.keys(this.state.categories).map((id) => (\r\n              <li\r\n                key={id}\r\n                onClick={() => {\r\n                  this.getByCategory(id);\r\n                }}\r\n              >\r\n                {this.state.categories[id]}\r\n                <img\r\n                  className='category'\r\n                  alt={`${this.state.categories[id].toLowerCase()}`}\r\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Search submitSearch={this.submitSearch} />\r\n        </div>\r\n        <div className='questions-list'>\r\n          <h2>Questions</h2>\r\n          {this.state.questions.map((q, ind) => (\r\n            <Question\r\n              key={q.id}\r\n              question={q.question}\r\n              answer={q.answer}\r\n              category={this.state.categories[q.category]}\r\n              difficulty={q.difficulty}\r\n              questionAction={this.questionAction(q.id)}\r\n            />\r\n          ))}\r\n          <div className='pagination-menu'>{this.createPagination()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Header.css';\r\n\r\nclass Header extends Component {\r\n  navTo(uri) {\r\n    window.location.href = window.location.origin + uri;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App-header'>\r\n        <h1\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          Udacitrivia\r\n        </h1>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          List\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/add');\r\n          }}\r\n        >\r\n          Add\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/play');\r\n          }}\r\n        >\r\n          Play\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/QuizView.css';\r\n\r\nconst questionsPerPlay = 5;\r\n\r\nclass QuizView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      categories: {},\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   $.ajax({\r\n  //     url: `/categories`, //TODO: update request URL\r\n  //     type: 'GET',\r\n  //     success: (result) => {\r\n  //       this.setState({ categories: result.categories });\r\n  //       return;\r\n  //     },\r\n  //     error: (error) => {\r\n  //       alert('Unable to load categories. Please try your request again');\r\n  //       return;\r\n  //     },\r\n  //   });\r\n  // }\r\n  componentDidMount() {\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/categories`)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        this.setState({ categories: result.categories });\r\n      })\r\n      .catch((error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n      });\r\n  }\r\n  selectCategory = ({ type, id = 0 }) => {\r\n    this.setState({ quizCategory: { type, id } }, this.getNextQuestion);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // getNextQuestion = () => {\r\n  //   const previousQuestions = [...this.state.previousQuestions];\r\n  //   if (this.state.currentQuestion.id) {\r\n  //     previousQuestions.push(this.state.currentQuestion.id);\r\n  //   }\r\n\r\n  //   $.ajax({\r\n  //     url: '/quiz', //TODO: update request URL\r\n  //     type: 'POST',\r\n  //     dataType: 'json',\r\n  //     contentType: 'application/json',\r\n  //     data: JSON.stringify({\r\n  //       previous_questions: previousQuestions,\r\n  //       quiz_category: this.state.quizCategory,\r\n  //     }),\r\n  //     xhrFields: {\r\n  //       withCredentials: true,\r\n  //     },\r\n  //     crossDomain: true,\r\n  //     success: (result) => {\r\n  //       this.setState({\r\n  //         showAnswer: false,\r\n  //         previousQuestions: previousQuestions,\r\n  //         currentQuestion: result.question,\r\n  //         guess: '',\r\n  //         forceEnd: result.question ? false : true,\r\n  //       });\r\n  //       return;\r\n  //     },\r\n  //     error: (error) => {\r\n  //       alert('Unable to load question. Please try your request again');\r\n  //       return;\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  getNextQuestion = async () => {\r\n    const previousQuestions = [...this.state.previousQuestions];\r\n    if (this.state.currentQuestion.id) {\r\n      previousQuestions.push(this.state.currentQuestion.id);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/quiz`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          previous_questions: previousQuestions,\r\n          quiz_category: this.state.quizCategory,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      this.setState({\r\n        showAnswer: false,\r\n        previousQuestions: previousQuestions,\r\n        currentQuestion: result.question,\r\n        guess: '',\r\n        forceEnd: result.question ? false : true,\r\n      });\r\n    } catch (error) {\r\n      alert('Unable to load question. Please try your request again');\r\n    }\r\n  };\r\n\r\n  submitGuess = (event) => {\r\n    event.preventDefault();\r\n    let evaluate = this.evaluateAnswer();\r\n    this.setState({\r\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\r\n      showAnswer: true,\r\n    });\r\n  };\r\n\r\n  restartGame = () => {\r\n    this.setState({\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    });\r\n  };\r\n\r\n  renderPrePlay() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='choose-header'>Choose Category</div>\r\n        <div className='category-holder'>\r\n          <div className='play-category' onClick={this.selectCategory}>\r\n            ALL\r\n          </div>\r\n          {Object.keys(this.state.categories).map((id) => {\r\n            return (\r\n              <div\r\n                key={id}\r\n                value={id}\r\n                className='play-category'\r\n                onClick={() =>\r\n                  this.selectCategory({ type: this.state.categories[id], id })\r\n                }\r\n              >\r\n                {this.state.categories[id]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFinalScore() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='final-header'>\r\n          Your Final Score is {this.state.numCorrect}\r\n        </div>\r\n        <div className='play-again button' onClick={this.restartGame}>\r\n          Play Again?\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  evaluateAnswer = () => {\r\n    const formatGuess = this.state.guess\r\n      // eslint-disable-next-line\r\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\r\n      .toLowerCase();\r\n    const answerArray = this.state.currentQuestion.answer\r\n      .toLowerCase()\r\n      .split(' ');\r\n    return answerArray.every((el) => formatGuess.includes(el));\r\n  };\r\n\r\n  renderCorrectAnswer() {\r\n    let evaluate = this.evaluateAnswer();\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>\r\n          {evaluate ? 'You were correct!' : 'You were incorrect'}\r\n        </div>\r\n        <div className='quiz-answer'>{this.state.currentQuestion.answer}</div>\r\n        <div className='next-question button' onClick={this.getNextQuestion}>\r\n          {' '}\r\n          Next Question{' '}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPlay() {\r\n    return this.state.previousQuestions.length === questionsPerPlay ||\r\n      this.state.forceEnd ? (\r\n      this.renderFinalScore()\r\n    ) : this.state.showAnswer ? (\r\n      this.renderCorrectAnswer()\r\n    ) : (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <form onSubmit={this.submitGuess}>\r\n          <input type='text' name='guess' onChange={this.handleChange} />\r\n          <input\r\n            className='submit-guess button'\r\n            type='submit'\r\n            value='Submit Answer'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\r\n  }\r\n}\r\n\r\nexport default QuizView;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './stylesheets/App.css';\r\nimport FormView from './components/FormView';\r\nimport QuestionView from './components/QuestionView';\r\nimport Header from './components/Header';\r\nimport QuizView from './components/QuizView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Header path />\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact component={QuestionView} />\r\n            <Route path='/add' component={FormView} />\r\n            <Route path='/play' component={QuizView} />\r\n            <Route component={QuestionView} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}