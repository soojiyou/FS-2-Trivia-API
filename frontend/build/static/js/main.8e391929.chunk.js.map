{"version":3,"sources":["components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","App.js","index.js"],"names":["FormView","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","submitQuestion","event","preventDefault","$","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","_defineProperty","target","name","value","categories","_createClass","key","_this2","_this3","React","createElement","id","className","onSubmit","onChange","Object","keys","map","Component","Question","visibleAnswer","_this$props","alt","concat","toLowerCase","src","onClick","questionAction","flipVisibility","style","visibility","Search","_len","arguments","length","args","Array","_key","apply","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","QuestionView","getQuestions","page","questions","totalQuestions","total_questions","currentCategory","current_category","getByCategory","searchTerm","action","window","confirm","num","pageNumbers","maxPage","Math","ceil","_loop","i","push","selectPage","_this4","q","ind","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","_ref$id","quizCategory","getNextQuestion","previousQuestions","_toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitGuess","evaluate","evaluateAnswer","numCorrect","restartGame","formatGuess","replace","split","every","el","includes","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","App","path","Router","Switch","Route","exact","component","ReactDOM","render"],"mappings":"2XA6GeA,SAzGD,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACZ,SAAAA,EAAYK,GAAO,IAAAC,EAQf,OAReC,YAAAC,KAAAR,IACjBM,EAAAH,EAAAM,KAAAD,OAyBFE,eAAiB,SAACC,GAChBA,EAAMC,iBACNC,IAAEC,KAAK,CACLC,IAAK,aACLC,KAAM,OACNC,SAAU,OACVC,YAAa,mBACbC,KAAMC,KAAKC,UAAU,CACnBC,SAAUhB,EAAKiB,MAAMD,SACrBE,OAAQlB,EAAKiB,MAAMC,OACnBC,WAAYnB,EAAKiB,MAAME,WACvBC,SAAUpB,EAAKiB,MAAMG,WAEvBC,UAAW,CACTC,iBAAiB,GAEnBC,aAAa,EACbC,QAAS,SAACC,GACRC,SAASC,eAAe,qBAAqBC,SAG/CC,MAAO,SAACA,GACNC,MAAM,6DAIX9B,EAED+B,aAAe,SAAC1B,GACdL,EAAKgC,SAAQC,YAAA,GAAI5B,EAAM6B,OAAOC,KAAO9B,EAAM6B,OAAOE,SArDlDpC,EAAKiB,MAAQ,CACXD,SAAU,GACVE,OAAQ,GACRC,WAAY,EACZC,SAAU,EACViB,WAAY,IACZrC,EA6FH,OA5FAsC,YAAA5C,EAAA,EAAA6C,IAAA,oBAAAH,MAED,WAAoB,IAAAI,EAAAtC,KAClBK,IAAEC,KAAK,CACLC,IAAG,cACHC,KAAM,MACNc,QAAS,SAACC,GACRe,EAAKR,SAAS,CAAEK,WAAYZ,EAAOY,cAGrCR,MAAO,SAACA,GACNC,MAAM,iEAIX,CAAAS,IAAA,SAAAH,MAkCD,WAAS,IAAAK,EAAAvC,KACP,OACEwC,IAAAC,cAAA,OAAKC,GAAG,YACNF,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAAA,QACEE,UAAU,YACVD,GAAG,oBACHE,SAAU5C,KAAKE,gBAEfsC,IAAAC,cAAA,aAAO,WAELD,IAAAC,cAAA,SAAOjC,KAAK,OAAOyB,KAAK,WAAWY,SAAU7C,KAAK6B,gBAEpDW,IAAAC,cAAA,aAAO,SAELD,IAAAC,cAAA,SAAOjC,KAAK,OAAOyB,KAAK,SAASY,SAAU7C,KAAK6B,gBAElDW,IAAAC,cAAA,aAAO,aAELD,IAAAC,cAAA,UAAQR,KAAK,aAAaY,SAAU7C,KAAK6B,cACvCW,IAAAC,cAAA,UAAQP,MAAM,KAAI,KAClBM,IAAAC,cAAA,UAAQP,MAAM,KAAI,KAClBM,IAAAC,cAAA,UAAQP,MAAM,KAAI,KAClBM,IAAAC,cAAA,UAAQP,MAAM,KAAI,KAClBM,IAAAC,cAAA,UAAQP,MAAM,KAAI,OAGtBM,IAAAC,cAAA,aAAO,WAELD,IAAAC,cAAA,UAAQR,KAAK,WAAWY,SAAU7C,KAAK6B,cACpCiB,OAAOC,KAAK/C,KAAKe,MAAMoB,YAAYa,IAAI,SAACN,GACvC,OACEF,IAAAC,cAAA,UAAQJ,IAAKK,EAAIR,MAAOQ,GACrBH,EAAKxB,MAAMoB,WAAWO,QAMjCF,IAAAC,cAAA,SAAOjC,KAAK,SAASmC,UAAU,SAAST,MAAM,iBAIrD1C,EAtGW,CAASyD,cCkDRC,SAnDD,SAAAzD,GAAAC,YAAAwD,EAAAzD,GAAA,IAAAE,EAAAC,YAAAsD,GACZ,SAAAA,IAAc,IAAApD,EAIV,OAJUC,YAAAC,KAAAkD,IACZpD,EAAAH,EAAAM,KAAAD,OACKe,MAAQ,CACXoC,eAAe,GACfrD,EA2CH,OA1CAsC,YAAAc,EAAA,EAAAb,IAAA,iBAAAH,MAED,WACElC,KAAK8B,SAAS,CAAEqB,eAAgBnD,KAAKe,MAAMoC,kBAC5C,CAAAd,IAAA,SAAAH,MAED,WAAS,IAAAI,EAAAtC,KACPoD,EAAmDpD,KAAKH,MAAhDiB,EAAQsC,EAARtC,SAAUE,EAAMoC,EAANpC,OAAQE,EAAQkC,EAARlC,SAAUD,EAAUmC,EAAVnC,WACpC,OACEuB,IAAAC,cAAA,OAAKE,UAAU,mBACbH,IAAAC,cAAA,OAAKE,UAAU,YAAY7B,GAC3B0B,IAAAC,cAAA,OAAKE,UAAU,mBACbH,IAAAC,cAAA,OACEE,UAAU,WACVU,IAAG,GAAAC,OAAKpC,EAASqC,eACjBC,IAAG,GAAAF,OAAKpC,EAASqC,cAAa,UAEhCf,IAAAC,cAAA,OAAKE,UAAU,cAAa,eAAa1B,GACzCuB,IAAAC,cAAA,OACEe,IAAI,aACJH,IAAI,SACJV,UAAU,SACVc,QAAS,kBAAMnB,EAAKzC,MAAM6D,eAAe,cAG7ClB,IAAAC,cAAA,OACEE,UAAU,qBACVc,QAAS,kBAAMnB,EAAKqB,mBAEnB3D,KAAKe,MAAMoC,cAAgB,OAAS,OAAO,WAE9CX,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,QACEmB,MAAO,CACLC,WAAY7D,KAAKe,MAAMoC,cAAgB,UAAY,WAEtD,WACUnC,SAKlBkC,EAhDW,CAASD,cC6BRa,EA9BH,SAAArE,GAAAC,YAAAoE,EAAArE,GAAA,IAAAE,EAAAC,YAAAkE,GAAA,SAAAA,IAAA,IAAAhE,EAAAC,YAAAC,KAAA8D,GAAA,QAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAcT,OAdStE,EAAAH,EAAAM,KAAAoE,MAAA1E,EAAA,CAAAK,MAAAsD,OAAAY,KACVnD,MAAQ,CACNuD,MAAO,IACRxE,EAEDyE,QAAU,SAACpE,GACTA,EAAMC,iBACNN,EAAKD,MAAM2E,aAAa1E,EAAKiB,MAAMuD,QACpCxE,EAED2E,kBAAoB,WAClB3E,EAAKgC,SAAS,CACZwC,MAAOxE,EAAK4E,OAAOxC,SAEtBpC,EAaA,OAbAsC,YAAA0B,EAAA,EAAAzB,IAAA,SAAAH,MAED,WAAS,IAAAI,EAAAtC,KACP,OACEwC,IAAAC,cAAA,QAAMG,SAAU5C,KAAKuE,SACnB/B,IAAAC,cAAA,SACEkC,YAAY,sBACZC,IAAK,SAACC,GAAK,OAAMvC,EAAKoC,OAASG,GAC/BhC,SAAU7C,KAAKyE,oBAEjBjC,IAAAC,cAAA,SAAOjC,KAAK,SAAS0B,MAAM,SAASS,UAAU,gBAGnDmB,EA3BS,CAASb,aC+KN6B,EA3KG,SAAArF,GAAAC,YAAAoF,EAAArF,GAAA,IAAAE,EAAAC,YAAAkF,GAChB,SAAAA,IAAc,IAAAhF,EAQV,OARUC,YAAAC,KAAA8E,IACZhF,EAAAH,EAAAM,KAAAD,OAcF+E,aAAe,WACb1E,IAAEC,KAAK,CACLC,IAAG,mBAAA+C,OAAqBxD,EAAKiB,MAAMiE,MACnCxE,KAAM,MACNc,QAAS,SAACC,GACRzB,EAAKgC,SAAS,CACZmD,UAAW1D,EAAO0D,UAClBC,eAAgB3D,EAAO4D,gBACvBhD,WAAYZ,EAAOY,WACnBiD,gBAAiB7D,EAAO8D,oBAI5B1D,MAAO,SAACA,GACNC,MAAM,+DAIX9B,EAyBDwF,cAAgB,SAAC5C,GACfrC,IAAEC,KAAK,CACLC,IAAG,eAAA+C,OAAiBZ,EAAE,cACtBlC,KAAM,MACNc,QAAS,SAACC,GACRzB,EAAKgC,SAAS,CACZmD,UAAW1D,EAAO0D,UAClBC,eAAgB3D,EAAO4D,gBACvBC,gBAAiB7D,EAAO8D,oBAI5B1D,MAAO,SAACA,GACNC,MAAM,+DAIX9B,EAED0E,aAAe,SAACe,GACdlF,IAAEC,KAAK,CACLC,IAAG,oBACHC,KAAM,OACNC,SAAU,OACVC,YAAa,mBACbC,KAAMC,KAAKC,UAAU,CAAE0E,WAAYA,IACnCpE,UAAW,CACTC,iBAAiB,GAEnBC,aAAa,EACbC,QAAS,SAACC,GACRzB,EAAKgC,SAAS,CACZmD,UAAW1D,EAAO0D,UAClBC,eAAgB3D,EAAO4D,gBACvBC,gBAAiB7D,EAAO8D,oBAI5B1D,MAAO,SAACA,GACNC,MAAM,+DAIX9B,EAED4D,eAAiB,SAAChB,GAAE,OAAK,SAAC8C,GACT,WAAXA,GACEC,OAAOC,QAAQ,kDACjBrF,IAAEC,KAAK,CACLC,IAAG,cAAA+C,OAAgBZ,GACnBlC,KAAM,SACNc,QAAS,SAACC,GACRzB,EAAKiF,gBAEPpD,MAAO,SAACA,GACNC,MAAM,gEA/Gd9B,EAAKiB,MAAQ,CACXkE,UAAW,GACXD,KAAM,EACNE,eAAgB,EAChB/C,WAAY,GACZiD,gBAAiB,MACjBtF,EA+JH,OA9JAsC,YAAA0C,EAAA,EAAAzC,IAAA,oBAAAH,MAED,WACElC,KAAK+E,iBACN,CAAA1C,IAAA,aAAAH,MAsBD,SAAWyD,GAAK,IAAArD,EAAAtC,KACdA,KAAK8B,SAAS,CAAEkD,KAAMW,GAAO,kBAAMrD,EAAKyC,mBACzC,CAAA1C,IAAA,mBAAAH,MAED,WAGE,IAHiB,IAAAK,EAAAvC,KACb4F,EAAc,GACdC,EAAUC,KAAKC,KAAK/F,KAAKe,MAAMmE,eAAiB,IAAIc,EAAA,SAAAC,GAEtDL,EAAYM,KACV1D,IAAAC,cAAA,QACEJ,IAAK4D,EACLtD,UAAS,YAAAW,OAAc2C,IAAM1D,EAAKxB,MAAMiE,KAAO,SAAW,IAC1DvB,QAAS,WACPlB,EAAK4D,WAAWF,KAGjBA,KATEA,EAAI,EAAGA,GAAKJ,EAASI,IAAGD,EAAAC,GAajC,OAAOL,IACR,CAAAvD,IAAA,SAAAH,MAiED,WAAS,IAAAkE,EAAApG,KACP,OACEwC,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,OAAKE,UAAU,mBACbH,IAAAC,cAAA,MACEgB,QAAS,WACP2C,EAAKrB,iBAER,cAGDvC,IAAAC,cAAA,UACGK,OAAOC,KAAK/C,KAAKe,MAAMoB,YAAYa,IAAI,SAACN,GAAE,OACzCF,IAAAC,cAAA,MACEJ,IAAKK,EACLe,QAAS,WACP2C,EAAKd,cAAc5C,KAGpB0D,EAAKrF,MAAMoB,WAAWO,GACvBF,IAAAC,cAAA,OACEE,UAAU,WACVU,IAAG,GAAAC,OAAK8C,EAAKrF,MAAMoB,WAAWO,GAAIa,eAClCC,IAAG,GAAAF,OAAK8C,EAAKrF,MAAMoB,WAAWO,GAAIa,cAAa,cAKvDf,IAAAC,cAACqB,EAAM,CAACU,aAAcxE,KAAKwE,gBAE7BhC,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAAA,UAAI,aACHzC,KAAKe,MAAMkE,UAAUjC,IAAI,SAACqD,EAAGC,GAAG,OAC/B9D,IAAAC,cAACS,EAAQ,CACPb,IAAKgE,EAAE3D,GACP5B,SAAUuF,EAAEvF,SACZE,OAAQqF,EAAErF,OACVE,SAAUkF,EAAKrF,MAAMoB,WAAWkE,EAAEnF,UAClCD,WAAYoF,EAAEpF,WACdyC,eAAgB0C,EAAK1C,eAAe2C,EAAE3D,QAG1CF,IAAAC,cAAA,OAAKE,UAAU,mBAAmB3C,KAAKuG,0BAI9CzB,EAxKe,CAAS7B,aCsCZuD,SAzCH,SAAA/G,GAAAC,YAAA8G,EAAA/G,GAAA,IAAAE,EAAAC,YAAA4G,GAAA,SAAAA,IAAA,OAAAzG,YAAAC,KAAAwG,GAAA7G,EAAA0E,MAAArE,KAAAgE,WAsCT,OAtCS5B,YAAAoE,EAAA,EAAAnE,IAAA,QAAAH,MACV,SAAMuE,GACJhB,OAAOiB,SAASC,KAAOlB,OAAOiB,SAASE,OAASH,IACjD,CAAApE,IAAA,SAAAH,MAED,WAAS,IAAApC,EAAAE,KACP,OACEwC,IAAAC,cAAA,OAAKE,UAAU,cACbH,IAAAC,cAAA,MACEgB,QAAS,WACP3D,EAAK+G,MAAM,MAEd,eAGDrE,IAAAC,cAAA,MACEgB,QAAS,WACP3D,EAAK+G,MAAM,MAEd,QAGDrE,IAAAC,cAAA,MACEgB,QAAS,WACP3D,EAAK+G,MAAM,UAEd,OAGDrE,IAAAC,cAAA,MACEgB,QAAS,WACP3D,EAAK+G,MAAM,WAEd,aAKNL,EAtCS,CAASvD,sBCoMN6D,SAjMD,SAAArH,GAAAC,YAAAoH,EAAArH,GAAA,IAAAE,EAAAC,YAAAkH,GACZ,SAAAA,EAAYjH,GAAO,IAAAC,EAWf,OAXeC,YAAAC,KAAA8G,IACjBhH,EAAAH,EAAAM,KAAAD,OA4BF+G,eAAiB,SAAAC,GAAsB,IAAnBxG,EAAIwG,EAAJxG,KAAIyG,EAAAD,EAAEtE,UAAE,IAAAuE,EAAG,EAACA,EAC9BnH,EAAKgC,SAAS,CAAEoF,aAAc,CAAE1G,OAAMkC,OAAQ5C,EAAKqH,kBACpDrH,EAED+B,aAAe,SAAC1B,GACdL,EAAKgC,SAAQC,YAAA,GAAI5B,EAAM6B,OAAOC,KAAO9B,EAAM6B,OAAOE,SACnDpC,EAEDqH,gBAAkB,WAChB,IAAMC,EAAiBC,YAAOvH,EAAKiB,MAAMqG,mBACrCtH,EAAKiB,MAAMuG,gBAAgB5E,IAC7B0E,EAAkBlB,KAAKpG,EAAKiB,MAAMuG,gBAAgB5E,IAGpDrC,IAAEC,KAAK,CACLC,IAAK,QACLC,KAAM,OACNC,SAAU,OACVC,YAAa,mBACbC,KAAMC,KAAKC,UAAU,CACnB0G,mBAAoBH,EACpBI,cAAe1H,EAAKiB,MAAMmG,eAE5B/F,UAAW,CACTC,iBAAiB,GAEnBC,aAAa,EACbC,QAAS,SAACC,GACRzB,EAAKgC,SAAS,CACZ2F,YAAY,EACZL,kBAAmBA,EACnBE,gBAAiB/F,EAAOT,SACxB4G,MAAO,GACPC,UAAUpG,EAAOT,YAIrBa,MAAO,SAACA,GACNC,MAAM,8DAIX9B,EAED8H,YAAc,SAACzH,GACbA,EAAMC,iBACN,IAAIyH,EAAW/H,EAAKgI,iBACpBhI,EAAKgC,SAAS,CACZiG,WAAaF,EAAmC/H,EAAKiB,MAAMgH,WAAa,EAAhDjI,EAAKiB,MAAMgH,WACnCN,YAAY,KAEf3H,EAEDkI,YAAc,WACZlI,EAAKgC,SAAS,CACZoF,aAAc,KACdE,kBAAmB,GACnBK,YAAY,EACZM,WAAY,EACZT,gBAAiB,GACjBI,MAAO,GACPC,UAAU,KAEb7H,EA0CDgI,eAAiB,WACf,IAAMG,EAAcnI,EAAKiB,MAAM2G,MAE5BQ,QAAQ,+BAAgC,IACxC3E,cAIH,OAHoBzD,EAAKiB,MAAMuG,gBAAgBtG,OAC5CuC,cACA4E,MAAM,KACUC,MAAM,SAACC,GAAE,OAAKJ,EAAYK,SAASD,MA5ItDvI,EAAKiB,MAAQ,CACXmG,aAAc,KACdE,kBAAmB,GACnBK,YAAY,EACZtF,WAAY,GACZ4F,WAAY,EACZT,gBAAiB,GACjBI,MAAO,GACPC,UAAU,GACV7H,EAkLH,OAjLAsC,YAAA0E,EAAA,EAAAzE,IAAA,oBAAAH,MAED,WAAoB,IAAAI,EAAAtC,KAClBK,IAAEC,KAAK,CACLC,IAAG,cACHC,KAAM,MACNc,QAAS,SAACC,GACRe,EAAKR,SAAS,CAAEK,WAAYZ,EAAOY,cAGrCR,MAAO,SAACA,GACNC,MAAM,iEAIX,CAAAS,IAAA,gBAAAH,MAmED,WAAgB,IAAAK,EAAAvC,KACd,OACEwC,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAAA,OAAKE,UAAU,iBAAgB,mBAC/BH,IAAAC,cAAA,OAAKE,UAAU,mBACbH,IAAAC,cAAA,OAAKE,UAAU,gBAAgBc,QAASzD,KAAK+G,gBAAgB,OAG5DjE,OAAOC,KAAK/C,KAAKe,MAAMoB,YAAYa,IAAI,SAACN,GACvC,OACEF,IAAAC,cAAA,OACEJ,IAAKK,EACLR,MAAOQ,EACPC,UAAU,gBACVc,QAAS,kBACPlB,EAAKwE,eAAe,CAAEvG,KAAM+B,EAAKxB,MAAMoB,WAAWO,GAAKA,SAGxDH,EAAKxB,MAAMoB,WAAWO,UAOpC,CAAAL,IAAA,mBAAAH,MAED,WACE,OACEM,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAAA,OAAKE,UAAU,gBAAe,uBACP3C,KAAKe,MAAMgH,YAElCvF,IAAAC,cAAA,OAAKE,UAAU,oBAAoBc,QAASzD,KAAKgI,aAAa,kBAKnE,CAAA3F,IAAA,sBAAAH,MAaD,WACE,IAAI2F,EAAW7H,KAAK8H,iBACpB,OACEtF,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAAA,OAAKE,UAAU,iBACZ3C,KAAKe,MAAMuG,gBAAgBxG,UAE9B0B,IAAAC,cAAA,OAAKE,UAAS,GAAAW,OAAKuE,EAAW,UAAY,UACvCA,EAAW,oBAAsB,sBAEpCrF,IAAAC,cAAA,OAAKE,UAAU,eAAe3C,KAAKe,MAAMuG,gBAAgBtG,QACzDwB,IAAAC,cAAA,OAAKE,UAAU,uBAAuBc,QAASzD,KAAKmH,iBACjD,IAAI,gBACS,QAIrB,CAAA9E,IAAA,aAAAH,MAED,WACE,OAxKqB,IAwKdlC,KAAKe,MAAMqG,kBAAkBnD,QAClCjE,KAAKe,MAAM4G,SACX3H,KAAKuI,mBACHvI,KAAKe,MAAM0G,WACbzH,KAAKwI,sBAELhG,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAAA,OAAKE,UAAU,iBACZ3C,KAAKe,MAAMuG,gBAAgBxG,UAE9B0B,IAAAC,cAAA,QAAMG,SAAU5C,KAAK4H,aACnBpF,IAAAC,cAAA,SAAOjC,KAAK,OAAOyB,KAAK,QAAQY,SAAU7C,KAAK6B,eAC/CW,IAAAC,cAAA,SACEE,UAAU,sBACVnC,KAAK,SACL0B,MAAM,sBAKf,CAAAG,IAAA,SAAAH,MAED,WACE,OAAOlC,KAAKe,MAAMmG,aAAelH,KAAKyI,aAAezI,KAAK0I,oBAC3D5B,EA9LW,CAAS7D,cCoBR0F,EAlBN,SAAAlJ,GAAAC,YAAAiJ,EAAAlJ,GAAA,IAAAE,EAAAC,YAAA+I,GAAA,SAAAA,IAAA,OAAA5I,YAAAC,KAAA2I,GAAAhJ,EAAA0E,MAAArE,KAAAgE,WAeN,OAfM5B,YAAAuG,EAAA,EAAAtG,IAAA,SAAAH,MACP,WACE,OACEM,IAAAC,cAAA,OAAKE,UAAU,OACbH,IAAAC,cAAC+D,EAAM,CAACoC,MAAI,IACZpG,IAAAC,cAACoG,IAAM,KACLrG,IAAAC,cAACqG,IAAM,KACLtG,IAAAC,cAACsG,IAAK,CAACH,KAAK,IAAII,OAAK,EAACC,UAAWnE,IACjCtC,IAAAC,cAACsG,IAAK,CAACH,KAAK,OAAOK,UAAWzJ,IAC9BgD,IAAAC,cAACsG,IAAK,CAACH,KAAK,QAAQK,UAAWnC,IAC/BtE,IAAAC,cAACsG,IAAK,CAACE,UAAWnE,WAK3B6D,EAfM,CAAS1F,aCHlBiG,IAASC,OAAO3G,IAAAC,cAACkG,EAAG,MAAKnH,SAASC,eAAe","file":"static/js/main.8e391929.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/FormView.css';\r\n\r\nclass FormView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      question: '',\r\n      answer: '',\r\n      difficulty: 1,\r\n      category: 1,\r\n      categories: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: `/categories`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  }\r\n\r\n  submitQuestion = (event) => {\r\n    event.preventDefault();\r\n    $.ajax({\r\n      url: '/questions', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        difficulty: this.state.difficulty,\r\n        category: this.state.category,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        document.getElementById('add-question-form').reset();\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to add question. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id='add-form'>\r\n        <h2>Add a New Trivia Question</h2>\r\n        <form\r\n          className='form-view'\r\n          id='add-question-form'\r\n          onSubmit={this.submitQuestion}\r\n        >\r\n          <label>\r\n            Question\r\n            <input type='text' name='question' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Answer\r\n            <input type='text' name='answer' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Difficulty\r\n            <select name='difficulty' onChange={this.handleChange}>\r\n              <option value='1'>1</option>\r\n              <option value='2'>2</option>\r\n              <option value='3'>3</option>\r\n              <option value='4'>4</option>\r\n              <option value='5'>5</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Category\r\n            <select name='category' onChange={this.handleChange}>\r\n              {Object.keys(this.state.categories).map((id) => {\r\n                return (\r\n                  <option key={id} value={id}>\r\n                    {this.state.categories[id]}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          <input type='submit' className='button' value='Submit' />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Question.css';\r\n\r\nclass Question extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visibleAnswer: false,\r\n    };\r\n  }\r\n\r\n  flipVisibility() {\r\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { question, answer, category, difficulty } = this.props;\r\n    return (\r\n      <div className='Question-holder'>\r\n        <div className='Question'>{question}</div>\r\n        <div className='Question-status'>\r\n          <img\r\n            className='category'\r\n            alt={`${category.toLowerCase()}`}\r\n            src={`${category.toLowerCase()}.svg`}\r\n          />\r\n          <div className='difficulty'>Difficulty: {difficulty}</div>\r\n          <img\r\n            src='delete.png'\r\n            alt='delete'\r\n            className='delete'\r\n            onClick={() => this.props.questionAction('DELETE')}\r\n          />\r\n        </div>\r\n        <div\r\n          className='show-answer button'\r\n          onClick={() => this.flipVisibility()}\r\n        >\r\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\r\n        </div>\r\n        <div className='answer-holder'>\r\n          <span\r\n            style={{\r\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\r\n            }}\r\n          >\r\n            Answer: {answer}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  getInfo = (event) => {\r\n    event.preventDefault();\r\n    this.props.submitSearch(this.state.query);\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      query: this.search.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.getInfo}>\r\n        <input\r\n          placeholder='Search questions...'\r\n          ref={(input) => (this.search = input)}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <input type='submit' value='Submit' className='button' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/App.css';\r\nimport Question from './Question';\r\nimport Search from './Search';\r\nimport $ from 'jquery';\r\n\r\nclass QuestionView extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      page: 1,\r\n      totalQuestions: 0,\r\n      categories: {},\r\n      currentCategory: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  getQuestions = () => {\r\n    $.ajax({\r\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          categories: result.categories,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  selectPage(num) {\r\n    this.setState({ page: num }, () => this.getQuestions());\r\n  }\r\n\r\n  createPagination() {\r\n    let pageNumbers = [];\r\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      pageNumbers.push(\r\n        <span\r\n          key={i}\r\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n          onClick={() => {\r\n            this.selectPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  getByCategory = (id) => {\r\n    $.ajax({\r\n      url: `/categories/${id}/questions`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitSearch = (searchTerm) => {\r\n    $.ajax({\r\n      url: `/questions/search`, //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({ searchTerm: searchTerm }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  questionAction = (id) => (action) => {\r\n    if (action === 'DELETE') {\r\n      if (window.confirm('are you sure you want to delete the question?')) {\r\n        $.ajax({\r\n          url: `/questions/${id}`, //TODO: update request URL\r\n          type: 'DELETE',\r\n          success: (result) => {\r\n            this.getQuestions();\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load questions. Please try your request again');\r\n            return;\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='question-view'>\r\n        <div className='categories-list'>\r\n          <h2\r\n            onClick={() => {\r\n              this.getQuestions();\r\n            }}\r\n          >\r\n            Categories\r\n          </h2>\r\n          <ul>\r\n            {Object.keys(this.state.categories).map((id) => (\r\n              <li\r\n                key={id}\r\n                onClick={() => {\r\n                  this.getByCategory(id);\r\n                }}\r\n              >\r\n                {this.state.categories[id]}\r\n                <img\r\n                  className='category'\r\n                  alt={`${this.state.categories[id].toLowerCase()}`}\r\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Search submitSearch={this.submitSearch} />\r\n        </div>\r\n        <div className='questions-list'>\r\n          <h2>Questions</h2>\r\n          {this.state.questions.map((q, ind) => (\r\n            <Question\r\n              key={q.id}\r\n              question={q.question}\r\n              answer={q.answer}\r\n              category={this.state.categories[q.category]}\r\n              difficulty={q.difficulty}\r\n              questionAction={this.questionAction(q.id)}\r\n            />\r\n          ))}\r\n          <div className='pagination-menu'>{this.createPagination()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Header.css';\r\n\r\nclass Header extends Component {\r\n  navTo(uri) {\r\n    window.location.href = window.location.origin + uri;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App-header'>\r\n        <h1\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          Udacitrivia\r\n        </h1>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          List\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/add');\r\n          }}\r\n        >\r\n          Add\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/play');\r\n          }}\r\n        >\r\n          Play\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/QuizView.css';\r\n\r\nconst questionsPerPlay = 5;\r\n\r\nclass QuizView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      categories: {},\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: `/categories`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  }\r\n\r\n  selectCategory = ({ type, id = 0 }) => {\r\n    this.setState({ quizCategory: { type, id } }, this.getNextQuestion);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  getNextQuestion = () => {\r\n    const previousQuestions = [...this.state.previousQuestions];\r\n    if (this.state.currentQuestion.id) {\r\n      previousQuestions.push(this.state.currentQuestion.id);\r\n    }\r\n\r\n    $.ajax({\r\n      url: '/quiz', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        previous_questions: previousQuestions,\r\n        quiz_category: this.state.quizCategory,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          showAnswer: false,\r\n          previousQuestions: previousQuestions,\r\n          currentQuestion: result.question,\r\n          guess: '',\r\n          forceEnd: result.question ? false : true,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load question. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitGuess = (event) => {\r\n    event.preventDefault();\r\n    let evaluate = this.evaluateAnswer();\r\n    this.setState({\r\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\r\n      showAnswer: true,\r\n    });\r\n  };\r\n\r\n  restartGame = () => {\r\n    this.setState({\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    });\r\n  };\r\n\r\n  renderPrePlay() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='choose-header'>Choose Category</div>\r\n        <div className='category-holder'>\r\n          <div className='play-category' onClick={this.selectCategory}>\r\n            ALL\r\n          </div>\r\n          {Object.keys(this.state.categories).map((id) => {\r\n            return (\r\n              <div\r\n                key={id}\r\n                value={id}\r\n                className='play-category'\r\n                onClick={() =>\r\n                  this.selectCategory({ type: this.state.categories[id], id })\r\n                }\r\n              >\r\n                {this.state.categories[id]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFinalScore() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='final-header'>\r\n          Your Final Score is {this.state.numCorrect}\r\n        </div>\r\n        <div className='play-again button' onClick={this.restartGame}>\r\n          Play Again?\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  evaluateAnswer = () => {\r\n    const formatGuess = this.state.guess\r\n      // eslint-disable-next-line\r\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\r\n      .toLowerCase();\r\n    const answerArray = this.state.currentQuestion.answer\r\n      .toLowerCase()\r\n      .split(' ');\r\n    return answerArray.every((el) => formatGuess.includes(el));\r\n  };\r\n\r\n  renderCorrectAnswer() {\r\n    let evaluate = this.evaluateAnswer();\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>\r\n          {evaluate ? 'You were correct!' : 'You were incorrect'}\r\n        </div>\r\n        <div className='quiz-answer'>{this.state.currentQuestion.answer}</div>\r\n        <div className='next-question button' onClick={this.getNextQuestion}>\r\n          {' '}\r\n          Next Question{' '}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPlay() {\r\n    return this.state.previousQuestions.length === questionsPerPlay ||\r\n      this.state.forceEnd ? (\r\n      this.renderFinalScore()\r\n    ) : this.state.showAnswer ? (\r\n      this.renderCorrectAnswer()\r\n    ) : (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <form onSubmit={this.submitGuess}>\r\n          <input type='text' name='guess' onChange={this.handleChange} />\r\n          <input\r\n            className='submit-guess button'\r\n            type='submit'\r\n            value='Submit Answer'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\r\n  }\r\n}\r\n\r\nexport default QuizView;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './stylesheets/App.css';\r\nimport FormView from './components/FormView';\r\nimport QuestionView from './components/QuestionView';\r\nimport Header from './components/Header';\r\nimport QuizView from './components/QuizView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Header path />\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact component={QuestionView} />\r\n            <Route path='/add' component={FormView} />\r\n            <Route path='/play' component={QuizView} />\r\n            <Route component={QuestionView} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}